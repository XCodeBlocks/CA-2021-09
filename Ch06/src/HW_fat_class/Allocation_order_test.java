package HW_fat_class;

public class Allocation_order_test {
	int n1, n2;		//(예시 변수)
	
	//(생성자: 처음 객체 생성하면 이것부터 할 것 같지?)
	public Allocation_order_test(int x, int y) {
		n1=x; n2=y;
		System.out.println(test);	//(일단 필드는 0 같은 거로 초기화 되니까, 여기서는 아직 할당 한 했으면 0 나올수도 있지.)
	}
	
	//(테스트용-값의 갱신 여부 확인: 필드값 채우고 나서 알아서 바뀌는가):
	int test = (n1-n2);		//(생각하기로는 생성자부터 하고 나중에 값 할당하겠지. 그러면 8-3=5 저장되는 거 아냐?)
	
	public void testPrint() {
		System.out.println(test);	//(그럼 여기서 위의 예상 결과인 '5'가 나오냐고? 실제로 돌려보면 땡. 0 그대로.)
	}
	/* 이를 통해 처음 객체 만들면서 생성자 호출하면,
	 * 분명 생성자를 호출했지만 생성자 무시하고 다른 필드 선언+초기화부터 무조건 한 다음
	 * 생성자에서 할 것을 맨 마지막으로 함을 알 수 있다. 
	 * 그런데, 이후에는 필드 값들이 바뀌었음에도 생성자 블록으로 오기 전 정해진 값이
	 * 자동으로 갱신되지 않는다.
	 * 그래서 객체 생성시에 찍어봐도, 나중에 찍어봐도 두 필드값이 0이었던 시절의 결과가 그대로 나옴.
	* */ 
}
